var searchIndex = JSON.parse('{\
"curl":{"doc":"Rust bindings to the libcurl C library","t":[3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,13,13,13,13,3,3,13,3,8,13,13,13,13,4,13,13,13,4,4,3,13,3,4,13,13,13,3,13,13,4,4,13,4,13,13,13,13,13,13,3,4,13,13,13,4,13,13,13,13,13,3,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Error","FormError","MultiError","Protocols","ShareError","Version","ares_version","ares_version_num","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brotli_version","brotli_version_num","cainfo","capath","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","code","code","description","description","description","description","easy","eq","eq","eq","eq","extra_description","feature_altsvc","feature_async_dns","feature_brotli","feature_conv","feature_debug","feature_gsasl","feature_gss_negotiate","feature_hsts","feature_http2","feature_http3","feature_idn","feature_ipv6","feature_largefile","feature_libz","feature_ntlm","feature_ntlm_wb","feature_spnego","feature_ssl","feature_sspi","feature_tlsauth_srp","feature_unicode","feature_unix_domain_socket","feature_zstd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","gsasl_version","host","hyper_version","iconv_version_num","init","into","into","into","into","into","into","into_iter","is_aborted_by_callback","is_again","is_bad_content_encoding","is_bad_download_resume","is_bad_easy_handle","is_bad_function_argument","is_bad_handle","is_bad_option","is_bad_socket","is_call_perform","is_chunk_failed","is_conv_failed","is_conv_required","is_couldnt_connect","is_couldnt_resolve_host","is_couldnt_resolve_proxy","is_disabled","is_failed_init","is_file_couldnt_read_file","is_filesize_exceeded","is_function_not_found","is_got_nothing","is_http2_error","is_http2_stream_error","is_http_post_error","is_http_returned_error","is_illegal_array","is_in_use","is_incomplete","is_interface_failed","is_internal_error","is_invalid","is_login_denied","is_memory","is_nomem","is_null","is_operation_timedout","is_option_twice","is_out_of_memory","is_out_of_memory","is_partial_file","is_peer_failed_verification","is_quote_error","is_range_error","is_read_error","is_recv_error","is_remote_access_denied","is_send_error","is_send_fail_rewind","is_ssl_cacert","is_ssl_cacert_badfile","is_ssl_certproblem","is_ssl_cipher","is_ssl_connect_error","is_ssl_crl_badfile","is_ssl_engine_initfailed","is_ssl_engine_notfound","is_ssl_engine_setfailed","is_ssl_issuer_error","is_ssl_shutdown_failed","is_too_many_redirects","is_unknown_option","is_unknown_option","is_unknown_option","is_unsupported_protocol","is_upload_failed","is_url_malformed","is_use_ssl_failed","is_write_error","libidn_version","libssh_version","libz_version","multi","ne","ne","ne","ne","new","new","new","new","next","nghttp2_version","nghttp2_version_num","num","protocols","quic_version","set_extra","ssl_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vendored","version","version_num","zstd_ver_num","zstd_version","Abort","Any","Any","Auth","CantSeek","DataIn","DataOut","Default","Easy","Easy2","Fail","Form","Handler","HeaderIn","HeaderOut","Http","Http1","HttpVersion","IfModifiedSince","IfUnmodifiedSince","Ignored","InfoType","IpResolve","Iter","LastModified","List","NetRc","None","Ok","Optional","Part","Pause","Pause","ProxyType","ReadError","Required","SeekResult","Socks4","Socks4a","Socks5","Socks5Hostname","SslDataIn","SslDataOut","SslOpt","SslVersion","Sslv2","Sslv3","Text","TimeCondition","Tlsv1","Tlsv10","Tlsv11","Tlsv12","Tlsv13","Transfer","V10","V11","V2","V2PriorKnowledge","V2TLS","V3","V4","V6","WriteError","accept_encoding","accept_encoding","add","address_scope","address_scope","allow_beast","appconnect_time","appconnect_time","append","autoreferer","autoreferer","aws_sigv4","aws_sigv4","aws_sigv4","basic","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_size","buffer_size","cainfo","cainfo","capath","capath","certinfo","certinfo","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect_only","connect_only","connect_time","connect_time","connect_timeout","connect_timeout","connect_to","connect_to","content_header","content_length_download","content_length_download","content_type","content_type","content_type","content_type_bytes","content_type_bytes","contents","cookie","cookie","cookie_file","cookie_file","cookie_jar","cookie_jar","cookie_list","cookie_list","cookie_session","cookie_session","cookies","cookies","crlfile","crlfile","custom_request","custom_request","debug","debug","debug_function","debug_function","digest","digest_ie","dns_cache_timeout","dns_cache_timeout","dns_servers","dns_servers","doh_ssl_verify_host","doh_ssl_verify_host","doh_ssl_verify_peer","doh_ssl_verify_peer","doh_ssl_verify_status","doh_ssl_verify_status","doh_url","doh_url","download_size","download_size","drop","drop","drop","drop","effective_url","effective_url","effective_url_bytes","effective_url_bytes","egd_socket","egd_socket","expect_100_timeout","fail_on_error","fail_on_error","fetch_filetime","fetch_filetime","file","file_content","filename","filetime","filetime","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follow_location","follow_location","forbid_reuse","forbid_reuse","fresh_connect","fresh_connect","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get_mut","get_ref","gssnegotiate","header","header","header_function","header_function","header_size","header_size","http_auth","http_auth","http_connectcode","http_connectcode","http_content_decoding","http_content_decoding","http_headers","http_headers","http_proxy_tunnel","http_proxy_tunnel","http_transfer_decoding","http_transfer_decoding","http_version","http_version","httppost","httppost","ignore_content_length","ignore_content_length","in_filesize","in_filesize","interface","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","ip_resolve","ip_resolve","issuer_cert","issuer_cert","issuer_cert_blob","issuer_cert_blob","iter","key_password","key_password","local_ip","local_ip","local_port","local_port","local_port_range","local_port_range","low_speed_limit","low_speed_limit","low_speed_time","low_speed_time","max_connects","max_connects","max_filesize","max_filesize","max_recv_speed","max_recv_speed","max_redirections","max_redirections","max_send_speed","max_send_speed","maxage_conn","maxage_conn","namelookup_time","namelookup_time","netrc","netrc","new","new","new","new","new","new","next","no_revoke","nobody","nobody","noproxy","noproxy","ntlm","ntlm_wb","open_socket","open_socket","os_errno","os_errno","part","password","password","path_as_is","path_as_is","perform","perform","perform","pinned_public_key","pinned_public_key","pipewait","pipewait","port","port","post","post","post_field_size","post_field_size","post_fields_copy","post_fields_copy","pretransfer_time","pretransfer_time","primary_ip","primary_ip","primary_port","primary_port","progress","progress","progress","progress","progress_function","progress_function","proxy","proxy","proxy_auth","proxy_auth","proxy_cainfo","proxy_cainfo","proxy_capath","proxy_capath","proxy_password","proxy_password","proxy_port","proxy_port","proxy_sslcert","proxy_sslcert","proxy_sslcert_blob","proxy_sslcert_blob","proxy_sslkey","proxy_sslkey","proxy_sslkey_blob","proxy_sslkey_blob","proxy_type","proxy_type","proxy_username","proxy_username","put","put","random_file","random_file","range","range","raw","raw","read","read","read_function","read_function","recv","recv","redirect_count","redirect_count","redirect_time","redirect_time","redirect_url","redirect_url","redirect_url_bytes","redirect_url_bytes","referer","referer","request_size","request_size","reset","reset","resolve","resolve","response_code","response_code","resume_from","resume_from","seek","seek","seek_function","seek_function","send","send","set_local_port","set_local_port","show_header","show_header","signal","signal","ssl_cainfo_blob","ssl_cainfo_blob","ssl_cert","ssl_cert","ssl_cert_blob","ssl_cert_blob","ssl_cert_type","ssl_cert_type","ssl_cipher_list","ssl_cipher_list","ssl_ctx","ssl_ctx","ssl_ctx_function","ssl_ctx_function","ssl_engine","ssl_engine","ssl_engine_default","ssl_engine_default","ssl_key","ssl_key","ssl_key_blob","ssl_key_blob","ssl_key_type","ssl_key_type","ssl_min_max_version","ssl_min_max_version","ssl_options","ssl_options","ssl_sessionid_cache","ssl_sessionid_cache","ssl_verify_host","ssl_verify_host","ssl_verify_peer","ssl_verify_peer","ssl_version","ssl_version","starttransfer_time","starttransfer_time","take_error_buf","take_error_buf","tcp_keepalive","tcp_keepalive","tcp_keepidle","tcp_keepidle","tcp_keepintvl","tcp_keepintvl","tcp_nodelay","tcp_nodelay","time_condition","time_condition","time_condition_unmet","time_condition_unmet","time_value","time_value","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_time","total_time","transfer","transfer_encoding","transfer_encoding","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unix_socket","unix_socket","unix_socket_path","unix_socket_path","unpause_read","unpause_read","unpause_read","unpause_write","unpause_write","unpause_write","unrestricted_auth","unrestricted_auth","upkeep","upkeep","upkeep","upload","upload","upload_buffer_size","upload_buffer_size","upload_size","upload_size","url","url","url_decode","url_decode","url_encode","url_encode","useragent","useragent","username","username","verbose","verbose","wildcard_match","wildcard_match","write","write","write_function","write_function","Easy2Handle","EasyHandle","Events","Message","Multi","MultiWaker","Socket","SocketEvents","WaitFd","action","add","add2","appconnect_time","appconnect_time","assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect_time","connect_time","content_length_download","content_length_download","content_type","content_type","content_type_bytes","content_type_bytes","cookies","cookies","download_size","download_size","effective_url","effective_url","effective_url_bytes","effective_url_bytes","error","fdset2","filetime","filetime","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_mut","get_ref","get_timeout","header_size","header_size","http_connectcode","http_connectcode","input","input","input_and_output","into","into","into","into","into","into","into","into","is_for","is_for2","local_ip","local_ip","local_port","local_port","messages","namelookup_time","namelookup_time","new","new","new","os_errno","os_errno","output","output","perform","pipelining","poll","poll_on_priority_read","poll_on_read","poll_on_write","pretransfer_time","pretransfer_time","primary_ip","primary_ip","primary_port","primary_port","raw","raw","raw","received_priority_read","received_read","received_write","redirect_count","redirect_count","redirect_time","redirect_time","redirect_url","redirect_url","redirect_url_bytes","redirect_url_bytes","remove","remove","remove2","request_size","request_size","response_code","response_code","result","result_for","result_for2","set_fd","set_max_connects","set_max_host_connections","set_max_total_connections","set_pipeline_length","set_token","set_token","socket_function","starttransfer_time","starttransfer_time","time_condition_unmet","time_condition_unmet","timeout","timer_function","to_owned","token","total_time","total_time","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpause_read","unpause_read","unpause_write","unpause_write","wait","waker","wakeup"],"q":["curlcurl::easycurl::multid":["An error returned from various “easy” operations.","An error from “form add” operations.","An error from “multi” operations.","An iterator over the list of protocols a version supports.","An error returned from “share” operations.","Version information about libcurl and the capabilities …","If available, the human readable version of ares that …","If available, the version of ares that libcurl is linked …","","","","","","","","","","","","","If available, the version of brotli libcurl is linked …","If available, the version of brotli libcurl is linked …","If available, the built-in default of CURLOPT_CAINFO.","If available, the built-in default of CURLOPT_CAPATH.","","","","","","","","","","","Returns the value of the underlying error corresponding to …","Returns the value of the underlying error corresponding to …","Returns the value of the underlying error corresponding to …","Returns the value of the underlying error corresponding to …","Returns the general description of this error code, using …","Returns curl’s human-readable version of this error.","Returns curl’s human-readable description of this error.","Returns a human-readable description of this error code.","Bindings to the “easy” libcurl API.","","","","","Returns the extra description of this error, if any is …","Returns whether libcurl was built with support for Alt-Svc.","Returns whether libcurl was built with asynchronous name …","Returns whether libcurl was built with support for Brotli.","Returns whether libcurl was built with support for …","Returns whether libcurl was built with debug capabilities","Returns whether libcurl was built with support for gsasl","Returns whether libcurl supports HTTP GSSNEGOTIATE","Returns whether libcurl was built with support for hsts","Returns whether libcurl was built with support for HTTP2.","Returns whether libcurl was built with support for HTTP3.","Returns whether libcurl was built with support for IDNA, …","Returns whether libcurl supports IPv6","Returns whether libcurl was built with large file support","Returns whether libcurl supports HTTP deflate via libz","Returns whether libcurl supports HTTP NTLM","Returns whether libcurl was built with support for NTLM …","Returns whether libcurl was built with SPNEGO …","Returns whether libcurl supports SSL","Returns whether libcurl was built with support for SSPI.","Returns whether libcurl was built with support for TLS-SRP.","Returns whether libcurl was built with support for unicode","Returns whether libcurl was built with support for unix …","Returns whether libcurl was built with support for zstd","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the libcurl version that this library is currently …","If available, the human readable version of hyper","Returns a human readable string of the host libcurl is …","If available, the human readable version of hyper","If available, the version of iconv libcurl is linked …","Initializes the underlying libcurl library.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLE_AGAIN.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLM_BAD_HANDLE.","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLM_BAD_SOCKET.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLE_CONV_REQD.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLE_HTTP2.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLSHE_IN_USE.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLSHE_INVALID.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLSHE_NOMEM.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLE_READ_ERROR.","Returns whether this error corresponds to CURLE_RECV_ERROR.","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLE_SEND_ERROR.","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLE_SSL_CACERT.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to CURLE_SSL_CIPHER.","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","Returns whether this error corresponds to …","If available, the version of libidn that libcurl is linked …","If available, the version of libssh that libcurl is linked …","Returns the version of libz that is used, or None if there …","Multi - initiating multiple requests simultaneously","","","","","Creates a new error from the underlying code returned by …","Creates a new error from the underlying code returned by …","Creates a new error from the underlying code returned by …","Creates a new error from the underlying code returned by …","","If available, the version of nghttp2 libcurl is linked …","If available, the version of nghttp2 libcurl is linked …","Returns the libcurl version that this library is currently …","Returns an iterator over the list of protocols that this …","If available, the version of quic libcurl is linked …","Stores some extra information about this error inside this …","Returns the version of OpenSSL that is used, or None if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if this was built with the vendored version …","Returns the human readable version string,","Returns a numeric representation of the version number","If avaiable, the numeric zstd version","If available, the human readable version of zstd","Indicates that the connection should be aborted immediately","","We don’t care what http version to use, and we’d like …","Structure which stores possible authentication methods to …","Indicates that although the seek failed libcurl should …","The data is protocol data received from the peer.","The data is protocol data sent to the peer.","","Raw bindings to a libcurl “easy session”.","Raw bindings to a libcurl “easy session”.","Indicates that the seek operation failed, and the entire …","Multipart/formdata for an HTTP POST request.","A trait for the various callbacks used by libcurl to …","The data is header (or header-like) data received from the …","The data is header (or header-like) data sent to the peer.","","","Possible values to pass to the <code>http_version</code> method.","","","Ignoring <code>.netrc</code> file and use information from url","Possible data chunks that can be witnessed as part of the …","Possible values to pass to the <code>ip_resolve</code> method.","An iterator over <code>List</code>","","A linked list of a strings","Options for <code>.netrc</code> parsing.","","Indicates that the seek operation was a success","The  use of your <code>~/.netrc</code> file is optional, and …","One part in a multipart upload, added to a <code>Form</code>.","Indicates that reading should be paused until <code>unpause</code> is …","Indicates that reading should be paused until <code>unpause</code> is …","Possible proxy types that libcurl currently understands.","Possible error codes that can be returned from the …","This value tells the library that use of the file is …","Possible return values from the <code>seek_function</code> callback.","","","","","The data is SSL/TLS (binary) data received from the peer.","The data is SSL/TLS (binary) data sent to the peer.","Structure which stores possible ssl options to pass to …","Possible values to pass to the <code>ssl_version</code> and …","","","The data is informational text.","Possible conditions for the <code>time_condition</code> method.","","","","","","A scoped transfer of information which borrows an <code>Easy</code> and …","Please use HTTP 1.0 in the request","Please use HTTP 1.1 in the request","Please use HTTP 2 in the request (Added in CURL 7.33.0)","Please use HTTP 2 without HTTP/1.1 Upgrade (Added in CURL …","Use version 2 for HTTPS, version 1.1 for HTTP (Added in …","Setting this value will make libcurl attempt to use HTTP/3 …","","","Possible error codes that can be returned from the …","Enables automatic decompression of HTTP downloads.","Same as <code>Easy2::accept_encoding</code>","Attempts to add this part to the <code>Form</code> that it was created …","Configures the scope for local IPv6 addresses.","Same as <code>Easy2::address_scope</code>","Tells libcurl to not attempt to use any workarounds for a …","Get the time until the SSL/SSH handshake is completed","Same as <code>Easy2::appconnect_time</code>","Appends some data into this list.","Indicates whether the referer header is automatically …","Same as <code>Easy2::autoreferer</code>","Provides AWS V4 signature authentication on HTTP(S) header.","Same as <code>Easy2::aws_sigv4</code>","HTTP AWS V4 signature authentication.","HTTP Basic authentication.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is used to provide a custom file upload part without …","Specify the preferred receive buffer size, in bytes.","Same as <code>Easy2::buffer_size</code>","Specify the path to Certificate Authority (CA) bundle","Same as <code>Easy2::cainfo</code>","Specify directory holding CA certificates","Same as <code>Easy2::capath</code>","Request SSL certificate information","Same as <code>Easy2::certinfo</code>","","","","","","","","","","","","","","","","","","","","","","","Configure whether to stop when connected to target server","Same as <code>Easy2::connect_only</code>","Get the time until connect","Same as <code>Easy2::connect_time</code>","Timeout for the connect phase","Same as <code>Easy2::connect_timeout</code>","Connect to a specific host and port.","Same as <code>Easy2::connect_to</code>","Specifies extra headers for the form POST section.","Get the content-length of the download","Same as <code>Easy2::content_length_download</code>","Used in combination with <code>Part::file</code>, provides the …","Get Content-Type","Same as <code>Easy2::content_type</code>","Get Content-Type, in bytes","Same as <code>Easy2::content_type_bytes</code>","A pointer to the contents of this part, the actual data to …","Set the contents of the HTTP Cookie header.","Same as <code>Easy2::cookie</code>","Set the file name to read cookies from.","Same as <code>Easy2::cookie_file</code>","Set the file name to store cookies to.","Same as <code>Easy2::cookie_jar</code>","Add to or manipulate cookies held in memory.","Same as <code>Easy2::cookie_list</code>","Start a new cookie session","Same as <code>Easy2::cookie_session</code>","Get all known cookies","Same as <code>Easy2::cookies</code>","Specify a Certificate Revocation List file","Same as <code>Easy2::crlfile</code>","Set a custom request string","Same as <code>Easy2::custom_request</code>","Specify a debug callback","Specify a debug callback","Same as <code>Easy::debug_function</code>, just takes a non <code>&#39;static</code> …","Specify a debug callback","HTTP Digest authentication.","HTTP Digest authentication with an IE flavor.","Sets the timeout of how long name resolves will be kept in …","Same as <code>Easy2::dns_cache_timeout</code>","Sets the DNS servers that wil be used.","Same as <code>Easy2::dns_servers</code>","Tells curl to verify the DoH (DNS-over-HTTPS) server’s …","Same as <code>Easy2::doh_ssl_verify_host</code>","This option tells curl to verify the authenticity of the …","Same as <code>Easy2::doh_ssl_verify_peer</code>","Pass a long as parameter set to 1 to enable or 0 to …","Same as <code>Easy2::doh_ssl_verify_status</code>","Provide the DNS-over-HTTPS URL.","Same as <code>Easy2::doh_url</code>","Get the number of downloaded bytes","Same as <code>Easy2::download_size</code>","","","","","Get the last used URL","Same as <code>Easy2::effective_url</code>","Get the last used URL, in bytes","Same as <code>Easy2::effective_url_bytes</code>","Specify EGD socket path.","Same as <code>Easy2::egd_socket</code>","Set maximum time to wait for Expect 100 request before …","Indicates whether this library will fail on HTTP response …","Same as <code>Easy2::fail_on_error</code>","Get the modification time of the remote resource","Same as <code>Easy2::fetch_filetime</code>","Makes this part a file upload part of the given file.","Causes this file to be read and its contents used as data …","Used in combination with <code>Part::file</code>, provides the filename …","Get the remote time of the retrieved document","Same as <code>Easy2::filetime</code>","","","","","","","","","","","","","","","","","","","","Follow HTTP 3xx redirects.","Same as <code>Easy2::follow_location</code>","Make connection get closed at once after use.","Same as <code>Easy2::forbid_reuse</code>","Force a new connection to be used.","Same as <code>Easy2::fresh_connect</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ask for a HTTP GET request.","Same as <code>Easy2::get</code>","Acquires a reference to the underlying handler for events.","Acquires a reference to the underlying handler for events.","HTTP Negotiate (SPNEGO) authentication.","Callback that receives header data","Callback that receives header data","Same as <code>Easy::header_function</code>, just takes a non <code>&#39;static</code> …","Callback that receives header data","Get size of retrieved headers","Same as <code>Easy2::header_size</code>","Set HTTP server authentication methods to try","Same as <code>Easy2::http_auth</code>","Get the CONNECT response code","Same as <code>Easy2::http_connectcode</code>","Enable or disable HTTP content decoding.","Same as <code>Easy2::http_content_decoding</code>","Add some headers to this HTTP request.","Same as <code>Easy2::http_headers</code>","Inform curl whether it should tunnel all operations …","Same as <code>Easy2::http_proxy_tunnel</code>","Enable or disable HTTP transfer decoding.","Same as <code>Easy2::http_transfer_decoding</code>","Set preferred HTTP version.","Same as <code>Easy2::http_version</code>","Tells libcurl you want a multipart/formdata HTTP POST to …","Same as <code>Easy2::httppost</code>","Ignore the content-length header.","Same as <code>Easy2::ignore_content_length</code>","Set the size of the input file to send off.","Same as <code>Easy2::in_filesize</code>","Tell curl which interface to bind to for an outgoing …","Same as <code>Easy2::interface</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Specify which IP protocol version to use","Same as <code>Easy2::ip_resolve</code>","Set the issuer SSL certificate filename","Same as <code>Easy2::issuer_cert</code>","Set the issuer SSL certificate using an in-memory blob.","Same as <code>Easy2::issuer_cert_blob</code>","Returns an iterator over the nodes in this list.","Set passphrase to private key.","Same as <code>Easy2::key_password</code>","Get local IP address of last connection","Same as <code>Easy2::local_ip</code>","Get the latest local port number","Same as <code>Easy2::local_port</code>","Indicates the number of attempts libcurl will perform to …","Same as <code>Easy2::local_port_range</code>","Set the low speed limit in bytes per second.","Same as <code>Easy2::low_speed_limit</code>","Set the low speed time period.","Same as <code>Easy2::low_speed_time</code>","Set the maximum connection cache size.","Same as <code>Easy2::max_connects</code>","Configure the maximum file size to download.","Same as <code>Easy2::max_filesize</code>","Rate limit data download speed","Same as <code>Easy2::max_recv_speed</code>","Set the maximum number of redirects allowed.","Same as <code>Easy2::max_redirections</code>","Rate limit data upload speed","Same as <code>Easy2::max_send_speed</code>","Set the maximum idle time allowed for a connection.","Same as <code>Easy2::maxage_conn</code>","Get the name lookup time","Same as <code>Easy2::namelookup_time</code>","Enable .netrc parsing","Same as <code>Easy2::netrc</code>","Creates a new blank form ready for the addition of new …","Creates a new “easy” handle which is the core of …","Creates a new empty list of strings.","Creates a new “easy” handle which is the core of …","Creates a new set of authentications with no members.","Creates a new set of SSL options.","","Tells libcurl to disable certificate revocation checks for …","Indicate whether to download the request without getting …","Same as <code>Easy2::nobody</code>","Provide a list of hosts that should not be proxied to.","Same as <code>Easy2::noproxy</code>","HTTP NTLM authentication.","NTLM delegating to winbind helper.","Callback to open sockets for libcurl.","Callback to open sockets for libcurl.","Get errno number from last connect failure.","Same as <code>Easy2::os_errno</code>","Prepares adding a new part to this <code>Form</code>","Configures the password to pass as authentication for this …","Same as <code>Easy2::password</code>","Indicates whether sequences of <code>/../</code> and <code>/./</code> will be …","Same as <code>Easy2::path_as_is</code>","Same as <code>Easy::perform</code>.","After options have been set, this will perform the …","Same as <code>Easy2::perform</code>","Set pinned public key.","Same as <code>Easy2::pinned_public_key</code>","Wait for pipelining/multiplexing","Same as <code>Easy2::pipewait</code>","Configures the port number to connect to, instead of the …","Same as <code>Easy2::port</code>","Make an HTTP POST request.","Same as <code>Easy2::post</code>","Configures the size of data that’s going to be uploaded …","Same as <code>Easy2::post_field_size</code>","Configures the data that will be uploaded as part of a …","Same as <code>Easy2::post_field_copy</code>","Get the time until the file transfer start","Same as <code>Easy2::pretransfer_time</code>","Get IP address of last connection.","Same as <code>Easy2::primary_ip</code>","Get the latest destination port number","Same as <code>Easy2::primary_port</code>","Callback to progress meter function","Callback to progress meter function","Indicates whether a progress meter will be shown for …","Same as <code>Easy2::progress</code>","Same as <code>Easy::progress_function</code>, just takes a non <code>&#39;static</code> …","Callback to progress meter function","Provide the URL of a proxy to use.","Same as <code>Easy2::proxy</code>","Set HTTP proxy authentication methods to try","Same as <code>Easy2::proxy_auth</code>","Set CA certificate to verify peer against for proxy.","Same as <code>Easy2::proxy_cainfo</code>","Specify a directory holding CA certificates for proxy.","Same as <code>Easy2::proxy_capath</code>","Configures the proxy password to pass as authentication …","Same as <code>Easy2::proxy_password</code>","Provide port number the proxy is listening on.","Same as <code>Easy2::proxy_port</code>","Set client certificate for proxy.","Same as <code>Easy2::proxy_sslcert</code>","Set the client certificate for the proxy using an …","Same as <code>Easy2::proxy_sslcert_blob</code>","Set private key for HTTPS proxy.","Same as <code>Easy2::proxy_sslkey</code>","Set the pricate key for the proxy using an in-memory blob.","Same as <code>Easy2::proxy_sslkey_blob</code>","Indicates the type of proxy being used.","Same as <code>Easy2::proxy_type</code>","Configures the proxy username to pass as authentication …","Same as <code>Easy2::proxy_username</code>","Make an HTTP PUT request.","Same as <code>Easy2::put</code>","Specify a source for random data","Same as <code>Easy2::random_file</code>","Indicates the range that this request should retrieve.","Same as <code>Easy2::range</code>","Get a pointer to the raw underlying CURL handle.","Same as <code>Easy2::raw</code>","Read callback for data uploads.","Read callback for data uploads.","Same as <code>Easy::read_function</code>, just takes a non <code>&#39;static</code> …","Read callback for data uploads.","Receives data from a connected socket.","Same as <code>Easy2::recv</code>","Get the number of redirects","Same as <code>Easy2::redirect_count</code>","Get the time for all redirection steps","Same as <code>Easy2::redirect_time</code>","Get the URL a redirect would go to","Same as <code>Easy2::redirect_url</code>","Get the URL a redirect would go to, in bytes","Same as <code>Easy2::redirect_url_bytes</code>","Sets the HTTP referer header","Same as <code>Easy2::referer</code>","Get size of sent request.","Same as <code>Easy2::request_size</code>","Re-initializes this handle to the default values.","Same as <code>Easy2::reset</code>","Specify custom host name to IP address resolves.","Same as <code>Easy2::resolve</code>","Get the last response code","Same as <code>Easy2::response_code</code>","Set a point to resume transfer from","Same as <code>Easy2::resume_from</code>","User callback for seeking in input stream.","User callback for seeking in input stream.","Same as <code>Easy::seek_function</code>, just takes a non <code>&#39;static</code> …","User callback for seeking in input stream.","Sends data over the connected socket.","Same as <code>Easy2::send</code>","Indicate which port should be bound to locally for this …","Same as <code>Easy2::set_local_port</code>","Indicates whether header information is streamed to the …","Same as <code>Easy2::show_header</code>","Inform libcurl whether or not it should install signal …","Same as <code>Easy2::signal</code>","Set the SSL Certificate Authorities using an in-memory …","Same as <code>Easy2::ssl_cainfo_blob</code>","Sets the SSL client certificate.","Same as <code>Easy2::ssl_cert</code>","Set the SSL client certificate using an in-memory blob.","Same as <code>Easy2::ssl_cert_blob</code>","Specify type of the client SSL certificate.","Same as <code>Easy2::ssl_cert_type</code>","Specify ciphers to use for TLS.","Same as <code>Easy2::ssl_cipher_list</code>","Callback to SSL context","Callback to SSL context","Same as <code>Easy::ssl_ctx_function</code>, just takes a non <code>&#39;static</code> …","Callback to SSL context","Set the SSL engine identifier.","Same as <code>Easy2::ssl_engine</code>","Make this handle’s SSL engine the default.","Same as <code>Easy2::ssl_engine_default</code>","Specify private keyfile for TLS and SSL client cert.","Same as <code>Easy2::ssl_key</code>","Specify an SSL private key using an in-memory blob.","Same as <code>Easy2::ssl_key_blob</code>","Set type of the private key file.","Same as <code>Easy2::ssl_key_type</code>","Set preferred TLS/SSL version with minimum version and …","Same as <code>Easy2::ssl_min_max_version</code>","Set SSL behavior options","Same as <code>Easy2::ssl_options</code>","Enable or disable use of the SSL session-ID cache","Same as <code>Easy2::ssl_sessionid_cache</code>","Verify the certificate’s name against host.","Same as <code>Easy2::ssl_verify_host</code>","Verify the peer’s SSL certificate.","Same as <code>Easy2::ssl_verify_peer</code>","Set preferred TLS/SSL version.","Same as <code>Easy2::ssl_version</code>","Get the time until the first byte is received","Same as <code>Easy2::starttransfer_time</code>","Returns the contents of the internal error buffer, if …","Same as <code>Easy2::take_error_buf</code>","Configures whether TCP keepalive probes will be sent.","Same as <code>Easy2::tcp_keepalive</code>","Configures the TCP keepalive idle time wait.","Same as <code>Easy2::tcp_keepidle</code>","Configures the delay between keepalive probes.","Same as <code>Easy2::tcp_keepintvl</code>","Configures whether the TCP_NODELAY option is set, or Nagle…","Same as <code>Easy2::tcp_nodelay</code>","Selects a condition for a time request.","Same as <code>Easy2::time_condition</code>","Get info on unmet time conditional","Same as <code>Easy2::time_condition_unmet</code>","Sets the time value for a conditional request.","Same as <code>Easy2::time_value</code>","Set maximum time the request is allowed to take.","Same as <code>Easy2::timeout</code>","","","","","","","","","","","","Get total time of previous transfer","Same as <code>Easy2::total_time</code>","Creates a new scoped transfer which can be used to set …","Request the HTTP Transfer Encoding.","Same as <code>Easy2::transfer_encoding</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides the Unix domain socket which this handle will …","Same as <code>Easy2::unix_socket</code>","Provides the Unix domain socket which this handle will …","Same as <code>Easy2::unix_socket_path</code>","Same as <code>Easy::unpause_read</code>.","Unpause reading on a connection.","Same as <code>Easy2::unpause_read</code>","Same as <code>Easy::unpause_write</code>","Unpause writing on a connection.","Same as <code>Easy2::unpause_write</code>","Send credentials to hosts other than the first as well.","Same as <code>Easy2::unrestricted_auth</code>","Same as <code>Easy::upkeep</code>","Some protocols have “connection upkeep” mechanisms. …","Same as <code>Easy2::upkeep</code>","Enable or disable data upload.","Same as <code>Easy2::upload</code>","Specify the preferred send buffer size, in bytes.","Same as <code>Easy2::upload_buffer_size</code>","Get the number of uploaded bytes","Same as <code>Easy2::upload_size</code>","Provides the URL which this handle will work with.","Same as <code>Easy2::url</code>","URL decodes a string <code>s</code>, returning <code>None</code> if it fails","Same as <code>Easy2::url_decode</code>","URL encodes a string <code>s</code>","Same as <code>Easy2::url_encode</code>","Sets the HTTP user-agent header","Same as <code>Easy2::useragent</code>","Configures the username to pass as authentication for this …","Same as <code>Easy2::username</code>","Configures this handle to have verbose output to help …","Same as <code>Easy2::verbose</code>","Indicates whether multiple files will be transferred based …","Same as <code>Easy2::wildcard_match</code>","Callback invoked whenever curl has downloaded data for the …","Callback invoked whenever curl has downloaded data for the …","Same as <code>Easy::write_function</code>, just takes a non <code>&#39;static</code> …","Set callback for writing received data.","Wrapper around an easy handle while it’s owned by a …","Wrapper around an easy handle while it’s owned by a …","Notification of the events that have happened on a socket.","Message from the <code>messages</code> function of a multi handle.","A multi handle for initiating multiple connections …","A handle that can be used to wake up a thread that’s …","Raw underlying socket type that the multi handles use","Notification of events that are requested on a socket.","File descriptor to wait on for use with the <code>wait</code> method on …","Inform of reads/writes available data given an action","Add an easy handle to a multi session","Same as <code>add</code>, but works with the <code>Easy2</code> type.","Same as <code>Easy2::appconnect_time</code>.","Same as <code>Easy2::appconnect_time</code>.","Set data to associate with an internal socket","","","","","","","","","","","","","","","","","","","Same as <code>Easy2::connect_time</code>.","Same as <code>Easy2::connect_time</code>.","Same as <code>Easy2::content_length_download</code>.","Same as <code>Easy2::content_length_download</code>.","Same as <code>Easy2::content_type</code>.","Same as <code>Easy2::content_type</code>.","Same as <code>Easy2::content_type_bytes</code>.","Same as <code>Easy2::content_type_bytes</code>.","Same as <code>Easy2::cookies</code>.","Same as <code>Easy2::cookies</code>.","Same as <code>Easy2::download_size</code>.","Same as <code>Easy2::download_size</code>.","Same as <code>Easy2::effective_url</code>.","Same as <code>Easy2::effective_url</code>.","Same as <code>Easy2::effective_url_bytes</code>.","Same as <code>Easy2::effective_url_bytes</code>.","Set or unset the whether these events indicate that an …","Extracts file descriptor information from a multi handle","Same as <code>Easy2::filetime</code>.","Same as <code>Easy2::filetime</code>.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Acquires a reference to the underlying handler for events.","Acquires a reference to the underlying handler for events.","Get how long to wait for action before proceeding","Same as <code>Easy2::header_size</code>.","Same as <code>Easy2::header_size</code>.","Same as <code>Easy2::http_connectcode</code>.","Same as <code>Easy2::http_connectcode</code>.","Set or unset the whether these events indicate that input …","Wait for incoming data. For the socket to become readable.","Wait for incoming and outgoing data. For the socket to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this easy message was for the specified …","Same as <code>is_for</code>, but for <code>Easy2Handle</code>.","Same as <code>Easy2::local_ip</code>.","Same as <code>Easy2::local_ip</code>.","Same as <code>Easy2::local_port</code>.","Same as <code>Easy2::local_port</code>.","Read multi stack informationals","Same as <code>Easy2::namelookup_time</code>.","Same as <code>Easy2::namelookup_time</code>.","Creates a new multi session through which multiple HTTP …","Creates a new blank event bit mask.","Constructs an empty (invalid) WaitFd.","Same as <code>Easy2::os_errno</code>.","Same as <code>Easy2::os_errno</code>.","Set or unset the whether these events indicate that output …","Wait for outgoing data. For the socket to become writable.","Reads/writes available data from each easy handle.","Enable or disable HTTP pipelining and multiplexing.","Block until activity is detected or a timeout passes.","Indicate that the socket should poll on high priority read …","Indicate that the socket should poll on read events such …","Indicate that the socket should poll on write events such …","Same as <code>Easy2::pretransfer_time</code>.","Same as <code>Easy2::pretransfer_time</code>.","Same as <code>Easy2::primary_ip</code>.","Same as <code>Easy2::primary_ip</code>.","Same as <code>Easy2::primary_port</code>.","Same as <code>Easy2::primary_port</code>.","Get a pointer to the raw underlying CURLM handle.","Get a pointer to the raw underlying CURL handle.","Get a pointer to the raw underlying CURL handle.","After a call to <code>wait</code>, returns <code>true</code> if <code>poll_on_priority_read</code>…","After a call to <code>wait</code>, returns <code>true</code> if <code>poll_on_read</code> was set …","After a call to <code>wait</code>, returns <code>true</code> if <code>poll_on_write</code> was …","Same as <code>Easy2::redirect_count</code>.","Same as <code>Easy2::redirect_count</code>.","Same as <code>Easy2::redirect_time</code>.","Same as <code>Easy2::redirect_time</code>.","Same as <code>Easy2::redirect_url</code>.","Same as <code>Easy2::redirect_url</code>.","Same as <code>Easy2::redirect_url_bytes</code>.","Same as <code>Easy2::redirect_url_bytes</code>.","Remove an easy handle from this multi session","The specified socket/file descriptor is no longer used by …","Same as <code>remove</code>, but for <code>Easy2Handle</code>.","Same as <code>Easy2::request_size</code>.","Same as <code>Easy2::request_size</code>.","Same as <code>Easy2::response_code</code>.","Same as <code>Easy2::response_code</code>.","If this message indicates that a transfer has finished, …","Same as <code>result</code>, except only returns <code>Some</code> for the specified …","Same as <code>result</code>, except only returns <code>Some</code> for the specified …","Set the file descriptor to wait for.","Set size of connection cache.","Sets the max number of connections to a single host.","Sets the max simultaneously open connections.","Sets the pipeline length.","Sets an internal private token for this <code>EasyHandle</code>.","Same as <code>EasyHandle::set_token</code>","Set the callback informed about what to wait for","Same as <code>Easy2::starttransfer_time</code>.","Same as <code>Easy2::starttransfer_time</code>.","Same as <code>Easy2::time_condition_unmet</code>.","Same as <code>Easy2::time_condition_unmet</code>.","Inform libcurl that a timeout has expired and sockets …","Set callback to receive timeout values","","Returns the token associated with the easy handle that …","Same as <code>Easy2::total_time</code>.","Same as <code>Easy2::total_time</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Unpause reading on a connection.","Unpause reading on a connection.","Unpause writing on a connection.","Unpause writing on a connection.","Block until activity is detected or a timeout passes.","Returns a new MultiWaker that can be used to wake up a …","Wakes up a thread that is blocked in Multi::poll. This …"],"i":[0,0,0,0,0,0,1,1,1,2,3,4,5,6,1,2,3,4,5,6,1,1,1,1,2,3,4,5,6,2,3,4,5,6,2,3,4,5,2,3,4,5,0,2,3,4,5,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,3,3,4,4,5,5,6,1,2,2,3,4,5,6,1,1,1,1,1,0,1,2,3,4,5,6,6,2,2,2,2,4,2,4,3,4,4,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,5,3,5,2,4,3,2,5,3,5,2,5,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,5,2,2,2,2,2,1,1,1,0,2,3,4,5,2,3,4,5,6,1,1,1,1,1,2,1,2,3,4,5,6,2,3,4,5,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,1,1,1,1,7,8,9,0,10,11,11,12,0,0,10,0,0,11,11,13,13,0,14,14,15,0,0,0,14,0,0,14,10,15,0,7,16,0,0,15,0,13,13,13,13,11,11,0,0,12,12,11,0,12,12,12,12,12,0,9,9,9,9,9,9,8,8,0,17,18,19,17,18,20,17,18,21,17,18,17,18,22,22,23,19,24,17,21,18,13,14,8,9,12,10,11,7,16,15,22,20,25,23,19,24,17,21,18,13,14,8,9,12,10,11,7,16,15,22,20,25,19,17,18,17,18,17,18,17,18,13,14,8,9,12,10,11,15,22,20,25,13,14,8,9,12,10,11,15,22,20,25,17,18,17,18,17,18,17,18,19,17,18,19,17,18,17,18,19,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,26,26,24,18,22,22,17,18,17,18,17,18,17,18,17,18,17,18,17,18,23,24,17,21,17,18,17,18,17,18,17,17,18,17,18,19,19,19,17,18,23,19,24,17,21,18,13,14,8,9,12,10,11,7,16,15,22,20,25,17,18,17,18,17,18,23,19,24,17,21,18,13,14,8,9,12,10,11,7,16,15,22,20,25,17,18,17,17,22,26,26,24,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,23,19,24,17,21,18,13,14,8,9,12,10,11,7,16,15,22,20,25,25,17,18,17,18,17,18,21,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,23,17,21,18,22,20,25,20,17,18,17,18,22,22,26,26,17,18,23,17,18,17,18,24,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,26,26,17,18,24,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,26,26,24,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,26,26,24,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,26,26,24,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,13,14,8,9,12,10,11,15,22,20,25,17,18,18,17,18,23,19,24,17,21,18,13,14,8,9,12,10,11,7,16,15,22,20,25,23,19,24,17,21,18,13,14,8,9,12,10,11,7,16,15,22,20,25,23,19,24,17,21,18,13,14,8,9,12,10,11,7,16,15,22,20,25,17,18,17,18,24,17,18,24,17,18,17,18,24,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,26,26,24,18,0,0,0,0,0,0,0,0,0,27,27,27,28,29,27,27,30,28,29,31,32,33,34,27,30,28,29,31,32,33,34,34,34,28,29,28,29,28,29,28,29,28,29,28,29,28,29,28,29,31,27,28,29,27,30,28,29,31,32,33,34,27,30,28,29,31,32,33,33,34,29,29,27,28,29,28,29,31,32,32,27,30,28,29,31,32,33,34,30,30,28,29,28,29,27,28,29,27,31,33,28,29,31,32,27,27,27,33,33,33,28,29,28,29,28,29,27,28,29,33,33,33,28,29,28,29,28,29,28,29,27,32,27,28,29,28,29,30,30,30,33,27,27,27,27,28,29,27,28,29,28,29,27,27,34,30,28,29,27,30,28,29,31,32,33,34,27,30,28,29,31,32,33,34,27,30,28,29,31,32,33,34,28,29,28,29,27,27,34],"f":[null,null,null,null,null,null,[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["error",3]],[[["",0]],["shareerror",3]],[[["",0]],["multierror",3]],[[["",0]],["formerror",3]],[[["",0]],["protocols",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["curlcode",6]],[[["",0]],["curlshcode",6]],[[["",0]],["curlmcode",6]],[[["",0]],["curlformcode",6]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,[[["",0],["error",3]],["bool",0]],[[["",0],["shareerror",3]],["bool",0]],[[["",0],["multierror",3]],["bool",0]],[[["",0],["formerror",3]],["bool",0]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["nulerror",3]],["error",3]],[[]],[[]],[[]],[[]],[[],["version",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["str",0]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["u32",0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],null,[[["",0],["error",3]],["bool",0]],[[["",0],["shareerror",3]],["bool",0]],[[["",0],["multierror",3]],["bool",0]],[[["",0],["formerror",3]],["bool",0]],[[["curlcode",6]],["error",3]],[[["curlshcode",6]],["shareerror",3]],[[["curlmcode",6]],["multierror",3]],[[["curlformcode",6]],["formerror",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["u32",0]]]],[[],["str",0]],[[["",0]],["protocols",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["string",3]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["str",0]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]],["option",4,[["str",0]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["formerror",3]]]],[[["",0],["u32",0]],["result",4,[["error",3]]]],[[["",0],["u32",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["sslopt",3]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["auth",3]],[[["",0],["bool",0]],["authvec",3,[["u8",0]]]],["",0]],[[["",0],["usize",0]],["result",4,[["error",3]]]],[[["",0],["usize",0]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["proxytype",4]],[[["",0]],["timecondition",4]],[[["",0]],["ipresolve",4]],[[["",0]],["httpversion",4]],[[["",0]],["sslversion",4]],[[["",0]],["seekresult",4]],[[["",0]],["infotype",4]],[[["",0]],["netrc",4]],[[["",0]],["auth",3]],[[["",0]],["sslopt",3]],[[["",0]],["iter",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["list",3]],["result",4,[["error",3]]]],[[["",0],["list",3]],["result",4,[["error",3]]]],[[["",0],["list",3]],["",0]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0],["str",0]],["",0]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0]],["",0]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["list",3],["error",3]]]],[[["",0]],["result",4,[["list",3],["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["infotype",4]]],[[["",0],["infotype",4]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["auth",3]],[[["",0],["bool",0]],["auth",3]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["option",4,[["str",0]]]],["result",4,[["error",3]]]],[[["",0],["option",4,[["str",0]]]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]],["",0]],[[["",0]],["result",4,[["option",4,[["i64",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["i64",0]]],["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["bool",0]],["auth",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["u64",0],["error",3]]]],[[["",0]],["result",4,[["u64",0],["error",3]]]],[[["",0],["auth",3]],["result",4,[["error",3]]]],[[["",0],["auth",3]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["list",3]],["result",4,[["error",3]]]],[[["",0],["list",3]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["httpversion",4]],["result",4,[["error",3]]]],[[["",0],["httpversion",4]],["result",4,[["error",3]]]],[[["",0],["form",3]],["result",4,[["error",3]]]],[[["",0],["form",3]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["ipresolve",4]],["result",4,[["error",3]]]],[[["",0],["ipresolve",4]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["iter",3]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0],["u16",0]],["result",4,[["error",3]]]],[[["",0],["u16",0]],["result",4,[["error",3]]]],[[["",0],["u32",0]],["result",4,[["error",3]]]],[[["",0],["u32",0]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["u32",0]],["result",4,[["error",3]]]],[[["",0],["u32",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["u32",0]],["result",4,[["error",3]]]],[[["",0],["u32",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0],["netrc",4]],["result",4,[["error",3]]]],[[["",0],["netrc",4]],["result",4,[["error",3]]]],[[],["form",3]],[[],["easy2",3]],[[],["list",3]],[[],["easy",3]],[[],["auth",3]],[[],["sslopt",3]],[[["",0]],["option",4]],[[["",0],["bool",0]],["sslopt",3]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["auth",3]],[[["",0],["bool",0]],["auth",3]],[[["",0],["c_int",6],["c_int",6],["c_int",6]],["option",4,[["curl_socket_t",6]]]],[[["",0],["c_int",6],["c_int",6],["c_int",6]],["option",4,[["curl_socket_t",6]]]],[[["",0]],["result",4,[["i32",0],["error",3]]]],[[["",0]],["result",4,[["i32",0],["error",3]]]],[[["",0],["str",0]],["part",3]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["u16",0]],["result",4,[["error",3]]]],[[["",0],["u16",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0],["f64",0],["f64",0],["f64",0],["f64",0]],["bool",0]],[[["",0],["f64",0],["f64",0],["f64",0],["f64",0]],["bool",0]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["auth",3]],["result",4,[["error",3]]]],[[["",0],["auth",3]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["u16",0]],["result",4,[["error",3]]]],[[["",0],["u16",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["proxytype",4]],["result",4,[["error",3]]]],[[["",0],["proxytype",4]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0]]],[[["",0]]],[[["",0]],["result",4,[["usize",0],["readerror",4]]]],[[["",0]],["result",4,[["usize",0],["readerror",4]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["usize",0],["error",3]]]],[[["",0]],["result",4,[["usize",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["u64",0],["error",3]]]],[[["",0]],["result",4,[["u64",0],["error",3]]]],[[["",0]]],[[["",0]]],[[["",0],["list",3]],["result",4,[["error",3]]]],[[["",0],["list",3]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["u64",0]],["result",4,[["error",3]]]],[[["",0],["seekfrom",4]],["seekresult",4]],[[["",0],["seekfrom",4]],["seekresult",4]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["usize",0],["error",3]]]],[[["",0]],["result",4,[["usize",0],["error",3]]]],[[["",0],["u16",0]],["result",4,[["error",3]]]],[[["",0],["u16",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0],["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["sslversion",4],["sslversion",4]],["result",4,[["error",3]]]],[[["",0],["sslversion",4],["sslversion",4]],["result",4,[["error",3]]]],[[["",0],["sslopt",3]],["result",4,[["error",3]]]],[[["",0],["sslopt",3]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["sslversion",4]],["result",4,[["error",3]]]],[[["",0],["sslversion",4]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["option",4,[["string",3]]]],[[["",0]],["option",4,[["string",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["timecondition",4]],["result",4,[["error",3]]]],[[["",0],["timecondition",4]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["bool",0],["error",3]]]],[[["",0]],["result",4,[["bool",0],["error",3]]]],[[["",0],["i64",0]],["result",4,[["error",3]]]],[[["",0],["i64",0]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["error",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["transfer",3]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["option",4,[["asref",8,[["path",3]]]]]],["result",4,[["error",3]]]],[[["",0],["option",4,[["asref",8,[["path",3]]]]]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["usize",0]],["result",4,[["error",3]]]],[[["",0],["usize",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["vec",3,[["u8",0]]]],[[["",0],["str",0]],["vec",3,[["u8",0]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0],["bool",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["usize",0],["writeerror",4]]]],[[["",0]],["result",4,[["usize",0],["writeerror",4]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],null,null,null,null,null,null,null,null,null,[[["",0],["socket",6],["events",3]],["result",4,[["u32",0],["multierror",3]]]],[[["",0],["easy",3]],["result",4,[["easyhandle",3],["multierror",3]]]],[[["",0],["easy2",3]],["result",4,[["easy2handle",3],["multierror",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0],["socket",6],["usize",0]],["result",4,[["multierror",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["multiwaker",3]],[[["",0],["",0]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0]],["result",4,[["list",3],["error",3]]]],[[["",0]],["result",4,[["list",3],["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0]],["result",4,[["f64",0],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0],["bool",0]],["events",3]],[[["",0],["option",4,[["fd_set",3]]],["option",4,[["fd_set",3]]],["option",4,[["fd_set",3]]]],["result",4,[["option",4,[["i32",0]]],["multierror",3]]]],[[["",0]],["result",4,[["option",4,[["i64",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["i64",0]]],["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pollfd",3]],["waitfd",3]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",4,[["option",4,[["duration",3]]],["multierror",3]]]],[[["",0]],["result",4,[["u64",0],["error",3]]]],[[["",0]],["result",4,[["u64",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0],["bool",0]],["events",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["easyhandle",3]],["bool",0]],[[["",0],["easy2handle",3]],["bool",0]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[],["multi",3]],[[],["events",3]],[[],["waitfd",3]],[[["",0]],["result",4,[["i32",0],["error",3]]]],[[["",0]],["result",4,[["i32",0],["error",3]]]],[[["",0],["bool",0]],["events",3]],[[["",0]],["bool",0]],[[["",0]],["result",4,[["u32",0],["multierror",3]]]],[[["",0],["bool",0],["bool",0]],["result",4,[["multierror",3]]]],[[["",0],["duration",3]],["result",4,[["u32",0],["multierror",3]]]],[[["",0],["bool",0]],["waitfd",3]],[[["",0],["bool",0]],["waitfd",3]],[[["",0],["bool",0]],["waitfd",3]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4,[["str",0]]],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0]],["result",4,[["option",4],["error",3]]]],[[["",0],["easyhandle",3]],["result",4,[["easy",3],["multierror",3]]]],[[["",0]],["bool",0]],[[["",0],["easy2handle",3]],["result",4,[["easy2",3],["multierror",3]]]],[[["",0]],["result",4,[["u64",0],["error",3]]]],[[["",0]],["result",4,[["u64",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["error",3]]]],[[["",0]],["option",4,[["result",4,[["error",3]]]]]],[[["",0],["easyhandle",3]],["option",4,[["result",4,[["error",3]]]]]],[[["",0],["easy2handle",3]],["option",4,[["result",4,[["error",3]]]]]],[[["",0],["socket",6]]],[[["",0],["usize",0]],["result",4,[["multierror",3]]]],[[["",0],["usize",0]],["result",4,[["multierror",3]]]],[[["",0],["usize",0]],["result",4,[["multierror",3]]]],[[["",0],["usize",0]],["result",4,[["multierror",3]]]],[[["",0],["usize",0]],["result",4,[["error",3]]]],[[["",0],["usize",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["multierror",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["bool",0],["error",3]]]],[[["",0]],["result",4,[["bool",0],["error",3]]]],[[["",0]],["result",4,[["u32",0],["multierror",3]]]],[[["",0]],["result",4,[["multierror",3]]]],[[["",0]]],[[["",0]],["result",4,[["usize",0],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[["",0]],["result",4,[["duration",3],["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0],["duration",3]],["result",4,[["u32",0],["multierror",3]]]],[[["",0]],["multiwaker",3]],[[["",0]],["result",4,[["multierror",3]]]]],"p":[[3,"Version"],[3,"Error"],[3,"ShareError"],[3,"MultiError"],[3,"FormError"],[3,"Protocols"],[4,"ReadError"],[4,"IpResolve"],[4,"HttpVersion"],[4,"SeekResult"],[4,"InfoType"],[4,"SslVersion"],[4,"ProxyType"],[4,"TimeCondition"],[4,"NetRc"],[4,"WriteError"],[3,"Easy2"],[3,"Easy"],[3,"Part"],[3,"SslOpt"],[3,"List"],[3,"Auth"],[3,"Form"],[3,"Transfer"],[3,"Iter"],[8,"Handler"],[3,"Multi"],[3,"EasyHandle"],[3,"Easy2Handle"],[3,"Message"],[3,"Events"],[3,"SocketEvents"],[3,"WaitFd"],[3,"MultiWaker"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};